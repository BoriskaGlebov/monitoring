services:

  prometheus:
    image: prom/prometheus:main
    container_name: prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=30d'   # Время хранения на 30 дней
      - '--storage.tsdb.retention.size=10GB'   # Максимальный размер
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - monitoring_net
  cadvisor:
    # cAdvisor собирает данные о ресурсах и производительности контейнеров
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - monitoring_net

  node-exporter:
    #Сбор системных метрик
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
#    ports:
#      - "127.0.0.1:9100:9100"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    #    networks:
    #      - monitoring_net
    network_mode: host
  #
  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://vpn-boriska.ru/grafana
#      - GF_SERVER_SERVE_FROM_SUB_PATH=true

    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - monitoring_net

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/www/certbot:/var/www/certbot:ro   # Монтируем директорию с хоста
      - /etc/letsencrypt:/etc/letsencrypt:ro # Путь к сертификатам, если используете Certbot
      - /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro  # Монтируем файл DH параметров
    ports:
      - "80:80"  # HTTP порт
      - "443:443" # HTTPS порт
    depends_on:
      - grafana
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - monitoring_net


#
volumes:
  grafana_data:
    name: grafana_vol
  prometheus_data:
    name: prometheus_data

networks:
  monitoring_net:
    name: monitoring_net
#    external: true #иногда нужно указать что б подключался к созданной сети.
# что б мониторить контейнеры из разных docker compose файлов



